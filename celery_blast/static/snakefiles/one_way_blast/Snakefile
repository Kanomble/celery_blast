configfile: "./snakefile_config"

QSEQIDS = []
with open(config['query_sequence'],'r') as qseqfile:
	for line in qseqfile.readlines():
		if ">" in line:
			#TODO adjust qseq_ids in query_sequence file in order to assign a new unique name ? - until now just refseq OR local database sequence headers are allowed
			qseq_id = line.split(" ")[0].split(">")[1].split(".")[0]
			QSEQIDS.append(qseq_id)

rule all:
	input:
		"genus_bars.html",
		"query_sequence_information.html",
		"query_sequence_information.csv",
		'blast_results_with_tax.table',
		expand("{qseqid}/blast_results_with_tax.table",qseqid=QSEQIDS),
		expand("{qseqid}/target_sequence_ids.txt",qseqid=QSEQIDS),
		expand("{qseqid}/target_sequences.png",qseqid=QSEQIDS)

#RULE 1
#normal blast procedure
rule blast:
	input: queries=config['query_sequence']
	output: "blast_results.table"
	params: word_size=config['word_size'], e_value=config['e_value'], num_alignments=config['num_alignments'], num_threads=config['num_threads'], database=config['blastdb']
	log: log="log/blast.log"
	shell:
		"blastp -db {params.database} -outfmt \"6 qseqid sseqid pident evalue bitscore qgi sgi sacc staxids sscinames scomnames stitle\" -out {output} -word_size {params.word_size} -evalue {params.e_value} -num_alignments {params.num_alignments} -num_threads {params.num_threads} -query {input.queries} 2> {log}"

#RULE 2
#plot taxonomy related graphs for blast results
rule blast_results_to_plots:
	input: blast_results="blast_results.table", query_file=config['query_sequence']
	params: genus_bars_static="../../../static/images/result_images/one_way_blast/" + str(config['project_id']) + '/genus_bars.html',user_email=config['user_email']
	output: genus_bars="genus_bars.html",html_table="blast_results.html", taxonomic_table='blast_results_with_tax.table'
	log: log="log/blast_results_to_plots.log"
	script:
		"../../../static/snakefiles/one_way_blast/plot_results.py"

#RULE 3
#collects online available informations of query sequences based on identifier
rule query_sequences_to_html_table:
	input: target_file=config['query_sequence']
	params: email=config['user_email']
	output: output_html="query_sequence_information.html", output_csv="query_sequence_information.csv"
	log: log="log/query_sequences_to_html_table.log"
	script:
		"../../../static/snakefiles/one_way_blast/query_sequences_to_html_table.py"

#RULE 4
#filters the blast result table with taxonomic information for the best hits(10%) and outputs query specific result files
rule filter_blast_results_table_to_csv:
	input: results_table="blast_results_with_tax.table", query_file=config['query_sequence']
	output: result_csv=expand("{qseqid}/blast_results_with_tax.table",qseqid=QSEQIDS),ids=expand("{qseqid}/target_sequence_ids.txt",qseqid=QSEQIDS),
	params: qseqs=QSEQIDS
	log: log="log/filter_blast_results_table_to_csv.log"
	script:
		"../../../static/snakefiles/one_way_blast/filter_blast_results_table_to_csv.py"

rule extract_subject_sequences_from_database:
	input: "{qseqid}/target_sequence_ids.txt"
	output: "{qseqid}/target_sequences.faa"
	params: database=config["blastdb"]
	shell:
		 "blastdbcmd -db {params.database} -entry_batch {input} -out {output}"

rule conduct_multiple_sequence_alignment_mafft:
    input: "{qseqid}/target_sequences.faa"
    output: "{qseqid}/target_sequences.msa"
    shell:
        "mafft --auto {input} > {output}"

rule conduct_phylogeny_fast_tree:
    input: "{qseqid}/target_sequences.msa"
    output: "{qseqid}/target_sequences.tree"
    shell:
        "fasttree {input} > {output}"

rule update_tree_with_taxid:
    input: nw="{qseqid}/target_sequences.tree",
            df= "{qseqid}/blast_results_with_tax.table"
    output: "{qseqid}/transformed_treefile.nwk"
    script:
        "../../../static/snakefiles/one_way_blast/update_seq_id_taxinfo.py"

rule ete3_tree_to_png:
    input: tree="{qseqid}/transformed_treefile.nwk"
    params:
        static_pic="../../../static/images/result_images/one_way_blast/" + str(config['project_id']) + "/{qseqid}_target_sequences.png"
    output: pic="{qseqid}/target_sequences.png"
    script:
        "../../../static/snakefiles/one_way_blast/ete3_tree_to_png.py"
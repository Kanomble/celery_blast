configfile: "./snakefile_config"

rule all:
	input:
		"blast_results.table","blast_results.html", "genus_bars.html"

rule blast:
	input: queries=config['query_sequence']
	output: results="blast_results.table"
	params: word_size=config['word_size'], e_value=config['e_value'], num_alignments=config['num_alignments'], num_threads=config['num_threads'], database=config['blastdb'], entrez_query=config['entrez_query'], search_strategy=config['search_strategy']
	run:
		if(params.entrez_query != ""):
			cmd_string = params.search_strategy + " -db "+params.database+\
			" -outfmt \"6 qseqid sseqid evalue bitscore qgi sgi sacc staxids sscinames scomnames stitle\""\
			" -out "+output.results+\
			" -word_size "+str(params.word_size)+\
			" -evalue "+str(params.e_value)+\
			" -num_alignments "+str(params.num_alignments)+\
			" -query "+input.queries+\
			" -remote"+\
			" -entrez_query \""+params.entrez_query+"\""
			shell(cmd_string)
		else:
			cmd_string = params.search_strategy + " -db "+params.database+\
			" -outfmt \"6 qseqid sseqid evalue bitscore qgi sgi sacc staxids sscinames scomnames stitle\""\
			" -out "+output.results+\
			" -word_size "+str(params.word_size)+\
			" -evalue "+str(params.e_value)+\
			" -num_alignments "+str(params.num_alignments)+\
			" -query "+input.queries+\
			" -remote"
			shell(cmd_string)
'''
rule blast_table_to_html:
	input: res="blast_results.table"
	output: html_table="blast_results.html"
	script:
		"../../../../static/snakefiles/one_way_blast/blast_tables_to_html.py"
'''
rule blast_results_to_plots:
	input: blast_results="blast_results.table", query_file=config['query_sequence']
	params: genus_bars_static="../../../../static/images/result_images/one_way_blast/remote_searches/" + str(config['project_id']) + '/genus_bars.html',user_email=config['user_email']
	output: genus_bars="genus_bars.html", html_table="blast_results.html"
	script:
		"../../../../static/snakefiles/one_way_blast/plot_results.py"
